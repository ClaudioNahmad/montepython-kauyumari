#-----CLASS v2.6.3 (branch: venadito1.0, hash: 08ae5544ae6524a8f007c2ddb38fa8e9e9cf646f)-----
 # MONTEPYTHON 2.2.6
#
#
# EXPERIMENTS TO TEST -----------------------------------------------------------------
# To see all the available ones, please look in the
# montepython/likelihoods folder. Every folder there is a valid likelihood to
# test.
 data.experiments=['JLA','bao_boss']
#data.experiments=['bao','cosmic_clocks_BC03_all']
#data.experiments=['Planck_highl','Planck_lowl','Planck_lensing']
#data.experiments=['wmap','spt']
 # SETTINGS FOR OVERSAMPLING (taken from base2015.param) -------------------------------
 # The first element will always be set to 1, for it is the sampling of the
# cosmological parameters. The other numbers describe the over sampling of the
# nuisance parameter space. This array must have the same dimension as the
# number of blocks in your run (so, 1 for cosmological parameters, and then 1
# for each experiment with varying nuisance parameters).
# Note that when using Planck likelihoods, you definitely want to use [1, 4],
# to oversample as much as possible the 14 nuisance parameters.
# Remember to order manually the experiments from slowest to fastest (putting
# Planck as the first set of experiments should be a safe bet, except if you
# also have LSS experiments).
# If you have experiments without nuisance, you do not need to specify an
# additional entry in the over_sampling list (notice for instance that, out of
# the three Planck likelihoods used, only Planck_highl requires nuisance
# parameters, therefore over_sampling has a length of two (cosmology, plus one
# set of nuisance).
data.over_sampling=[1, 2]
 # COSMOLOGICAL PARAMETERS -------------------------------------------------------------
 # - if min max irrelevant, put to -1 or None (if you want a boundary of -1, use -1.0)
# - if fixed, put 1-sigma to 0
# - if scale irrelevant, put to 1, otherwise to the appropriate factor
# - role is either 'cosmo', 'nuisance' or 'derived'
#data.parameters[class name]       = [   mean,   min,       max,1-sigma, scale,    'role']
 #(grabbed from multiple .param files)
 #data.parameters['omega_b']        = [ 2.2253,  None,      None,  0.028,  0.01,   'cosmo']
#data.parameters['omega_cdm']      = [ 0.1120,  None,      None, 0.0016,     1,   'cosmo']
#data.parameters['100*theta_s']    = [ 1.0418,  None,      None,   3e-4,     1,   'cosmo']
#data.parameters['n_s']            = [  0.963,    -1,        -1,  0.004,     1,   'cosmo']
#data.parameters['ln10^{10}A_s']   = [ 3.0753,  None,      None, 0.0029,     1,   'cosmo']
#data.parameters['tau_reio']       = [  0.085,    -1,        -1, 0.0044,     1,   'cosmo']
data.parameters['T_cmb']           = [    2.0,	None,      None,  0.015,     1,   'cosmo']
data.parameters['h']               = [  0.703,    -1,        -1, 0.0065,     1,   'cosmo']
 #grabbed from base.param file
 data.parameters['omega_b']         = [ 2.2253,   None,     None,  0.028,  0.01,   'cosmo']
#data.parameters['omega_b']         = [0.022253,  None,     None,  0.028,     1,   'cosmo']
data.parameters['omega_cdm']       = [0.11919,   None,     None, 0.0027,     1,   'cosmo']
#data.parameters['H0']             = [ 67.802,   None,     None,    1.2,     1,   'cosmo']
data.parameters['A_s']             = [ 2.2177,      0,     None,  0.055, 1.e-9,   'cosmo']
data.parameters['n_s']             = [0.96229,      0,     None, 0.0074,     1,   'cosmo']
data.parameters['tau_reio']        = [0.09463,      0,     None,  0.013,     1,   'cosmo']
 # EQUATION-OF-STATE PARAMETERS --------------------------------------------------------
 #older (for reference)
#data.parameters['w0_fld']    	   = [-0.878,    -1.0,     -0.1,      0,     1,   'cosmo']
#data.parameters['wa_fld']    	   = [-0.894,    -1.0,     -0.1,      0,     1,   'cosmo']
data.parameters['b0_fld'] 	   = [ -0.93,    -1.2,      1.0,  0.005,     1,   'cosmo']
data.parameters['b1_fld'] 	   = [-0.337,    -1.0,    -0.01,  0.005,     1,   'cosmo']
data.parameters['Omega_fld'] 	   = [   0.6,     0.0,      1.0,   0.05,     1,   'cosmo']
 # NUISANCE PARAMETERS -----------------------------------------------------------------
 #(JLA)
data.parameters['alpha']   	   = [0.15  ,    None,     None,  0.001,     1, 'nuisance']
data.parameters['beta']    	   = [3.559 ,    None,     None,   0.02,     1, 'nuisance']
data.parameters['M']       	   = [-19.02,    None,     None,  0.004,     1, 'nuisance']
data.parameters['Delta_M'] 	   = [-0.10 ,    None,     None,  0.004,     1, 'nuisance']
 # DERIVED PARAMETERS ------------------------------------------------------------------
 #data.parameters['z_reio']         = [1     ,      -1,   -1,      0,     1,  'derived']
#data.parameters['YHe']            = [1     ,    None, None,      0,     1,  'derived']
data.parameters['H0']              = [1     ,    None, None,      0,     1,  'derived']
#data.parameters['A_s']            = [0     ,    None, None,      0,  1e-9,  'derived']
#data.parameters['sigma8']         = [0     ,    None, None,      0,     1,  'derived']
 # CLASS ARGUMENTS (SPECIFIC) ----------------------------------------------------------
 #aqui no sé si Omega_fld se refiere a la densidad -física- (omega_x*h^2) o al 
#parámetro de densidad (omega_x)
 #data.cosmo_arguments['Omega_fld']  =  0.6911
data.cosmo_arguments['use_ppf']    =  'yes' 
#data.cosmo_arguments['output'] = 'mPk,tCl'
#data.cosmo_arguments['sBBN file'] = data.path['cosmo']+'/bbn/sBBN.dat'
 # MCMC PARAMETERS ---------------------------------------------------------------------
 # Number of steps taken, by default (overwritten by the -N command)
data.N=100
# Number of accepted steps before writing to file the chain. Larger means less
# access to disc, but this is not so much time consuming.
data.write_step=5
 #
#
#
#
#
#
#
#
 #-----Likelihood-JLA-----
JLA.use_nuisance = ['alpha', 'beta', 'M', 'Delta_M']
JLA.conflicting_experiments = ['JLA_simple']
JLA.data_directory = '/home/claudionahmad/01_montepython/montepython-venadito/data/JLA'
JLA.settings = 'jla.dataset'
 #-----Likelihood-bao_boss-----
bao_boss.exclude = []
bao_boss.file = 'bao_2014_hikuri.txt'
bao_boss.data_directory = '/home/claudionahmad/01_montepython/montepython-venadito/data'
 #-----------Cosmological-arguments---------
data.cosmo_arguments.update({'use_ppf': 'yes'})
 #--------Default-Configuration------
data.path['cosmo']	= '/home/claudionahmad/00_class/class-venadito/nealika_N1'
data.path['root']	= '/home/claudionahmad/01_montepython/montepython-venadito'
data.path['data']	= '/home/claudionahmad/01_montepython/montepython-venadito/data'
data.path['clik']	= '/scratch/data/planck_2015/plc-2.0'
data.path['MontePython']	= '/home/claudionahmad/01_montepython/montepython-venadito/montepython'
